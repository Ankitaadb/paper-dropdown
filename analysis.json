{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "paper-dropdown.html",
      "properties": [
        {
          "name": "label",
          "type": "string",
          "description": "Label shown against the dropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 16
            },
            "end": {
              "line": 131,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If true, dropdown will be disabled.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 16
            },
            "end": {
              "line": 139,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "value",
          "type": "Object",
          "description": "Value of the dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 16
            },
            "end": {
              "line": 148,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_updateSelected\""
            }
          }
        },
        {
          "name": "selected",
          "type": "number",
          "description": "Index of the selected item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 16
            },
            "end": {
              "line": 157,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_updateValue\""
            }
          }
        },
        {
          "name": "opened",
          "type": "boolean",
          "description": "This is true if the dropdown is in open state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 16
            },
            "end": {
              "line": 167,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_onOpenedChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "searchable",
          "type": "boolean",
          "description": "If true, a text field is shown at the top of dropdown which\nuser can use to search/filter for an item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 16
            },
            "end": {
              "line": 176,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "errorMessage",
          "type": "string",
          "description": "The error message to display when invalid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 16
            },
            "end": {
              "line": 183,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "allowOutsideScroll",
          "type": "boolean",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 16
            },
            "end": {
              "line": 194,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noLabelFloat",
          "type": "boolean",
          "description": "Set to true to disable the floating label. Bind this to the\n`<paper-input-container>`'s `noLabelFloat` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 16
            },
            "end": {
              "line": 204,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "alwaysFloatLabel",
          "type": "boolean",
          "description": "Set to true to always float the label. Bind this to the\n`<paper-input-container>`'s `alwaysFloatLabel` property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 16
            },
            "end": {
              "line": 213,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "noAnimations",
          "type": "boolean",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 16
            },
            "end": {
              "line": 222,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "horizontalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 16
            },
            "end": {
              "line": 231,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "verticalAlign",
          "type": "string",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 16
            },
            "end": {
              "line": 240,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"top\""
        },
        {
          "name": "dynamicAlign",
          "type": "boolean",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 16
            },
            "end": {
              "line": 250,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "restoreFocusOnClose",
          "type": "boolean",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 16
            },
            "end": {
              "line": 258,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "multi",
          "type": "boolean",
          "description": "If true, multiple options can be selected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 16
            },
            "end": {
              "line": 266,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 12
            },
            "end": {
              "line": 274,
              "column": 13
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_itemsChanged",
          "description": "Updates selected on items change.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 12
            },
            "end": {
              "line": 282,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "items"
            }
          ]
        },
        {
          "name": "_getItemValue",
          "description": "Returns the value of the item for given index.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 292,
              "column": 12
            },
            "end": {
              "line": 297,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "description": "Index of the item"
            },
            {
              "name": "items",
              "description": "Items in the listbox"
            }
          ],
          "return": {
            "type": "string",
            "desc": "Value of the item."
          }
        },
        {
          "name": "_getItemLabel",
          "description": "Returns the Label shown to user for the item at the\ngiven index.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 308,
              "column": 12
            },
            "end": {
              "line": 310,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "index",
              "description": "Index of the item."
            },
            {
              "name": "items",
              "description": "Items in listbox."
            }
          ],
          "return": {
            "type": "string",
            "desc": "Label of the item."
          }
        },
        {
          "name": "_updateSelected",
          "description": "Updates `value` property according to `selected` property.\nSets selected to -1 if value is not found.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 319,
              "column": 12
            },
            "end": {
              "line": 328,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ]
        },
        {
          "name": "_updateValue",
          "description": "Updates `value` property according to `selected` property.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 336,
              "column": 12
            },
            "end": {
              "line": 344,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "selected"
            }
          ]
        },
        {
          "name": "_onOpenedChanged",
          "description": "Called whenever `opened` changes.\nFires `opened` or `closed` events.\nAlso, clears `_searchText` variable on close.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 12
            },
            "end": {
              "line": 361,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "opened"
            }
          ]
        },
        {
          "name": "_stopEventPropagation",
          "description": "Stops event propagation.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 369,
              "column": 12
            },
            "end": {
              "line": 371,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "description": "Event"
            }
          ]
        },
        {
          "name": "_filter",
          "description": "Shows/Hides listbox items based on searchText",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 12
            },
            "end": {
              "line": 396,
              "column": 13
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "searchText",
              "description": "Text to be matched in item's label."
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 108,
          "column": 16
        },
        "end": {
          "line": 397,
          "column": 9
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "label",
          "description": "Label shown against the dropdown.",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 16
            },
            "end": {
              "line": 131,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "disabled",
          "description": "If true, dropdown will be disabled.",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 16
            },
            "end": {
              "line": 139,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "value",
          "description": "Value of the dropdown",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 16
            },
            "end": {
              "line": 148,
              "column": 17
            }
          },
          "metadata": {},
          "type": "Object"
        },
        {
          "name": "selected",
          "description": "Index of the selected item.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 16
            },
            "end": {
              "line": 157,
              "column": 17
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "opened",
          "description": "This is true if the dropdown is in open state",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 16
            },
            "end": {
              "line": 167,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "searchable",
          "description": "If true, a text field is shown at the top of dropdown which\nuser can use to search/filter for an item.",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 16
            },
            "end": {
              "line": 176,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "error-message",
          "description": "The error message to display when invalid.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 16
            },
            "end": {
              "line": 183,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "allow-outside-scroll",
          "description": "By default, the dropdown will constrain scrolling on the page\nto itself when opened.\nSet to true in order to prevent scroll from being constrained\nto the dropdown when it opens.",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 16
            },
            "end": {
              "line": 194,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-label-float",
          "description": "Set to true to disable the floating label. Bind this to the\n`<paper-input-container>`'s `noLabelFloat` property.",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 16
            },
            "end": {
              "line": 204,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "always-float-label",
          "description": "Set to true to always float the label. Bind this to the\n`<paper-input-container>`'s `alwaysFloatLabel` property.",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 16
            },
            "end": {
              "line": 213,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "no-animations",
          "description": "Set to true to disable animations when opening and closing the\ndropdown.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 16
            },
            "end": {
              "line": 222,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "horizontal-align",
          "description": "The orientation against which to align the menu dropdown\nhorizontally relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 228,
              "column": 16
            },
            "end": {
              "line": 231,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "vertical-align",
          "description": "The orientation against which to align the menu dropdown\nvertically relative to the dropdown trigger.",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 16
            },
            "end": {
              "line": 240,
              "column": 17
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "dynamic-align",
          "description": "If true, the `horizontalAlign` and `verticalAlign` properties will\nbe considered preferences instead of strict requirements when\npositioning the dropdown and may be changed if doing so reduces\nthe area of the dropdown falling outside of `fitInto`.",
          "sourceRange": {
            "start": {
              "line": 248,
              "column": 16
            },
            "end": {
              "line": 250,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "restore-focus-on-close",
          "description": "Whether focus should be restored to the dropdown when the menu closes.",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 16
            },
            "end": {
              "line": 258,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "multi",
          "description": "If true, multiple options can be selected.",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 16
            },
            "end": {
              "line": 266,
              "column": 17
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "close",
          "description": "close",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "open",
          "description": "open",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "selected-changed",
          "description": "Fired when the `selected` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "opened-changed",
          "description": "Fired when the `opened` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-dropdown"
    }
  ]
}
